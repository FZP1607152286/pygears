{%- import 'snippet.j2' as snippet -%}

{% call snippet.module_with_intf_structs(module_name, intfs, intfs, comment) %}

    reg [{{bitw(len(_dout_t))-1}}:0] i_reg;

    {{vgen_signal(_dout_t, "reg", "data_reg", "output")}}
    wire handshake;
    wire final_cond;

    assign final_cond = (i_reg == {{len(_dout_t)}});

    assign dout_valid = final_cond;
    assign din_ready = !final_cond;
    assign dout_s = data_reg;

    always @(posedge clk) begin
        if(rst || final_cond && dout_ready) begin
            i_reg <= 0;
        end else if (din_valid && !final_cond) begin
            data_reg_arr[i_reg] <= din_s;
            i_reg <= i_reg + 1;
        end
    end

{% endcall %}